@inject IMeasurementService _service
@inject HttpClient Http
@using Syncfusion.Blazor.Charts
@page "/Embeded/Measurements"

@*https://blazor.syncfusion.com/demos/*@
<div class="container-fluid">
    <div class="row">
        <div class="col-6">
            <SfChart>

                <ChartPrimaryXAxis LabelRotation="90" Title="Date" ValueType="Syncfusion.Blazor.Charts.ValueType.Category" />

                <ChartPrimaryYAxis Title="Temperatur" LabelFormat="{value}°C" ValueType="Syncfusion.Blazor.Charts.ValueType.Double" Minimum="10"/>
                <ChartTooltipSettings Enable="true"></ChartTooltipSettings>
                <ChartSeriesCollection>
                    <ChartSeries DataSource="Mymeasurements" XName="Date" YName="Temperatur">
                        <ChartMarker Visible="true" Height="10" Width="10">
                        </ChartMarker>
                    </ChartSeries>
                </ChartSeriesCollection>
            </SfChart>
        </div>
        <div class="col-6">
            <SfChart>
                <ChartPrimaryXAxis LabelRotation="90" Title="Date" ValueType="Syncfusion.Blazor.Charts.ValueType.Category" />

                <ChartPrimaryYAxis Title="Humidity" LabelFormat="{value}%" ValueType="Syncfusion.Blazor.Charts.ValueType.Double" Minimum="10" />
                <ChartTooltipSettings Enable="true"></ChartTooltipSettings>
                <ChartSeriesCollection>
                    <ChartSeries DataSource="Mymeasurements" XName="Date" YName="Humidity">
                        <ChartMarker Visible="true" Height="10" Width="10">
                        </ChartMarker>
                    </ChartSeries>
                </ChartSeriesCollection>
            </SfChart>
        </div>
    </div>

</div>

<p></p>

@code {

    public Exception MyProperty { get; set; }

    public string mystring { get; set; }

    IEnumerable<Measurement> Mymeasurements { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Mymeasurements = new List<Measurement>();
        Mymeasurements = await _service.GetMeasurementsAsync();
        mystring = "oi";
    }

}
